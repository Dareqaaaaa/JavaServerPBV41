/*

 * PointBlank Java Server
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors: Henrique Rodrigues
 * Copyright (C) 2015-2017
 */

package game.network.protocol;

import core.log.Logger;

public enum GamePacketIdACK
{
	FRIEND_INFO_ACK(274),
	FRIEND_ROOM_INVITE_ACK(277),
	FRIEND_UPDATE_ACK(279),
	FRIEND_UPDATE2_ACK(279),
	FRIEND_ACCEPT_ACK(281),
	FRIEND_INVITE_ACK(283),
	FRIEND_REMOVE_ACK(285),
	AUTH_SEND_WHISPER_ACK(291),
	AUTH_RECV_WHISPER_ACK(294),
	BASE_SYSTEM_MESSAGE_ACK(294),
	BASE_FIND_PLAYER_ACK(298),
	PLAYER_UPDATE_NICK_ACK(300),
	MESSENGER_NOTE_SEND_ACK(418),
	MESSENGER_NOTE_CHECK_READED_ACK(423),
	MESSENGER_NOTE_DELETE_ACK(425),
	MESSENGER_NOTE_RECEIVE_ACK(427),
	MESSENGER_NOTE_ACCEPT_ACK(441),
	BASE_KICK_ACCOUNT_ACK(513),
	PUSH_ITEM_ACK(514),
	JOIN_GAME_ACK(515),
	ALARM_COIN_ACK(517),
	AUTH_SHOP_AUTH_GOODS_ACK(523),
	AUTH_SHOP_AUTH_ITEMS_ACK(525),
	AUTH_SHOP_AUTH_GIFT_ACK(527),
	BASE_USER_GIFTLIST_ACK(529),
	AUTH_SHOP_GOODS_BUY_ACK(531),
	INVENTORY_ITEM_EQUIP_ACK(535),
	INVENTORY_ITEM_EQUIP2_ACK(537),
	INVENTORY_ITEM_DELETE_ACK(543),
	AUTH_GET_REMAIN_MONEY_ACK(545),
	INVENTORY_NICK_CHECK_ACK(549),
	INVENTORY_RANDOMBOX_ACK(551),
	MESSENGER_GIFT_RECEIVE_ACK(553),
	INVENTORY_ITEM_JACKPOT_ACK(557),
	SHOP_TEST1_ACK(559),
	PLAYER_UPDATE_GOLD_ACK(561),
	SHOP_TEST2_ACK(567),
	CLAN_DETAIL_INFO_ACK(1305),
	CLAN_MEMBER_CONTEXT_ACK(1307),
	CLAN_MEMBER_LIST_ACK(1309),
	CLAN_CREATE_ACK(1311),
	CLAN_DELETE_ACK(1313),
	CLAN_CREATE_PLAYER_INVITE_ACK(1315),
	CLAN_CREATE_INVITE_ACK(1317),
	CLAN_REMOVE_INVITES_ACK(1319),
	CLAN_REQUEST_CONTEXT_ACK(1321),
	CLAN_REQUEST_LIST_ACK(1323),
	CLAN_REQUEST_INFO_ACK(1325),
	CLAN_ACCEPT_REQUEST_ACK(1327),
	CLAN_DENIAL_REQUEST_ACK(1330),
	CLAN_PLAYER_LEAVE_ACK(1333),
	CLAN_DEPORTATION_ACK(1335),
	CLAN_COMMISSION_MASTER_ACK(1338),
	CLAN_COMMISSION_STAFF_ACK(1341),
	CLAN_COMMISSION_REGULAR_ACK(1344),
	CLAN_READ_MEMBERS_ACK(1349),
	CLAN_MEMBER_INFO_INSERT_ACK(1351),
	CLAN_MEMBER_INFO_DELETE_ACK(1353),
	CLAN_MEMBER_INFO_CHANGE_ACK(1355),
	CLAN_CHATTING_ACK(1359),
	CLAN_CHECK_LOGO_ACK(1361),
	CLAN_REPLACE_NOTICE_ACK(1363),
	CLAN_REPLACE_INTRO_ACK(1365),
	CLAN_SAVE_ACCESS_ACK(1373),
	CLAN_ITEM_MAX_PLAYERS_ACK(1377),
	CLAN_ROOM_INVITED_RESULT_ACK(1383),
	CLAN_INVITE_ACK(1393),
	CLAN_MESSAGE_INVITE_RESP_ACK(1395),
	CLAN_MSG_FOR_PLAYERS_ACK(1397),
	CLAN_CREATE_REQUESITES_ACK(1417),
	CLAN_ENTER_ACK(1442),
	CLAN_LEAVE_ACK(1444),
	CLAN_IN_CS_LIST_ACK(1452),
	CLAN_CLIENT_LIST_ACK(1446),
	CLAN_CHECK_DUPLICATE_ACK(1448),
	CLAN_MATCH_CLAN_PART2_ACK(1539),
	CLAN_MATCH_CLAN_PART_ACK(1541),
	CLAN_WAR_MATCH_TEAM_COUNT_ACK(1543),
	CLAN_WAR_MATCH_TEAM_LIST_ACK(1545),
	CLAN_WAR_CREATE_TEAM_ACK(1547),
	CLAN_WAR_JOIN_TEAM_ACK(1549),
	CLAN_MATCH_REMOVE_CLAN_ACK(1551),
	CLAN_WAR_REGIST_MERCENARY_ACK(1552),
	CLAN_MATCH_PROPOSE_ACK(1554),
	CLAN_MATCH_REQUEST_BATTLE_ACK(1555),
	CLAN_MATCH_ACCEPTED_BATTLE_ACK(1559),
	CLAN_WAR_MATCH_TEAM_INFO_ACK(1570),
	CLAN_MATCH_UPTIME_ACK(1572),
	CLAN_WAR_TEAM_CHATTING_ACK(1577),
	BASE_SCHANNEL_LIST_ACK(2049),
	SERVER_MESSAGE_KICK_PLAYER_ACK(2051),
	SERVER_MESSAGE_KICK_BATTLE_ACK(2052),
	ROOM_INVITE_SHOW_ACK(2053),
	BASE_XINGCODE_ERROR_ACK(2054),
	SERVER_MESSAGE_ANNOUNCE_ACK(2055),
	SERVER_MESSAGE_FRIEND_INVITED(2056),
	SERVER_MESSAGE_CHANGE_INVENTORY_ACK(2058),
	SERVER_MESSAGE_GAMEGUARD_ERROR(2059),
	BASE_CHANNEL_LIST_ACK(2572),
	BASE_CHANNEL_ANNOUNCE_ACK(2574),
	BASE_USER_LEAVE_ACK(2578),
	BASE_USER_ENTER_ACK(2580),
	BASE_XINGCODE_ACK(2583),
	BASE_GET_EQUIPMENT_INFO_ACK(2586),
	BASE_GET_RECORD_INFO_DB_ACK(2592),
	MISSION_QUEST_GET_INFO_ACK(2596),
	CLAN_MATCH_2598_ACK(2598),
	MISSION_QUEST_COMPLETE_ACK(2600),
	MISSION_QUEST_UPDATE_CARD_ACK(2602),
	TITLE_UPDATE_ACK(2604),
	MISSION_QUEST_BUY_CARD_ACK(2606),
	MISSION_QUEST_DELETE_CARD_ACK(2608),
	PLAYER_UPDATE_STATS_ACK(2610),
	PLAYER_LEVEL_UP_ACK(2614),
	TITLE_GET_ACK(2620),
	TITLE_USE_ACK(2622),
	TITLE_DETACH_ACK(2624),
	PLAYER_COUPON_INFO_ACK(2638),
	PLAYER_UPDATE_RANK_ACK(2638),
	LOBBY_PLAYER_INFO_ACK(2640),
	BASE_SCHANNEL_UPDATE_ACK(2643),
	BASE_CHANNEL_PASSWD_ACK(2645),
	PLAYER_EXIT_GAME_ACK(2655),
	ATTENDANCE_CHECK_ACK(2662),
	ATTENDANCE_REWARD_ACK(2664),
	BASE_ACCOUNT_LOG_ACK(2685),
	PUSH_PRESENT_ITEM_ACK(2692),
	SHOP_LEAVE_ACK(2818),
	SHOP_ENTER_ACK(2820),
	SHOP_LIST_ACK(2822),
	OUTPOST_ENTER_ACK(2898),
	OUTPOST_LEAVE_ACK(2900),
	OUTPOST_AWARD_ACK(2902),
	LOBBY_GET_ROOMLIST_ACK(3074),
	LOBBY_QUICKJOIN_ACK(3078),
	LOBBY_ENTER_ACK(3080),
	ROOM_JOIN_ACK(3082),
	LOBBY_LEAVE_ACK(3084),
	LOBBY_GET_ROOMINFOADD_ACK(3088),
	ROOM_CREATE_ACK(3090),
	LOBBY_CHATTING_ACK(3093),
	LOBBY_ANTIGAME_ACK(3097),
	LOBBY_PLAYER_INFO2_ACK(3100),
	LOBBY_CREATE_NICK_NAME_ACK(3102),
	BATTLE_HOLE_CHECK_ACK(3330),
	BATTLE_READYBATTLE_ERROR_ACK(3332),
	BATTLE_STARTBATTLE_ACK(3334),
	BATTLE_ENDBATTLE_ACK(3336),
	BATTLE_RESPAWN_ACK(3338),
	BATTLE_COUNTDOWN_ACK(3340),
	BATTLE_SENDPING_ACK(3345),
	BATTLE_GIVEUPBATTLE_ACK(3347),
	BATTLE_PRESTARTBATTLE_ACK(3349),
	BATTLE_MISSION_ROUND_PRE_START_ACK(3351),
	BATTLE_MISSION_ROUND_END_ACK(3353),
	BATTLE_DEATH_ACK(3355),
	BATTLE_MISSION_BOMB_INSTALL_ACK(3357),
	BATTLE_MISSION_BOMB_UNINSTALL_ACK(3359),
	BATTLE_RECORD_ACK(3363),
	BATTLE_MISSION_GENERATOR_INFO_ACK(3369),
	BATTLE_MISSION_ROUND_START_ACK(3371),
	BATTLE_TIMERSYNC_ACK(3373),
	BATTLE_CHANGE_DIFFICULTY_LEVEL_ACK(3377),
	BATTLE_RESPAWN_FOR_AI_ACK(3379),
	BATTLE_DINO_ESCAPE_ACK(3383),
	BATTLE_LEAVEP2PSERVER_ACK(3385),
	BATTLE_MISSION_DEFENCE_INFO_ACK(3387),
	BATTLE_DINO_PLACAR_ACK(3389),
	BATTLE_TUTORIAL_END_ACK(3395),
	BATTLE_SUGGEST_KICKVOTE_ACK(3397),
	VOTEKICK_START_ACK(3399),
	VOTEKICK_UPDATE_FINAL_ACK(3401),
	VOTEKICK_RESULT_ACK(3403),
	VOTEKICK_UPDATE_ACK(3407),
	VOTEKICK_KICK_ACK(3409),
	OUTPOST_PLAY_ACK(3410),
	BATTLE_READYBATTLE_ACK(3426),
	BATTLE_READYBATTLE2_ACK(3427),
	BATTLE_TIMER_INFO_ACK(3429),
	INVENTORY_ENTER_ACK(3586),
	INVENTORY_ITEM_CREATE_ACK(3588),
	INVENTORY_ITEM_UPDATE_ACK(3588),
	INVENTORY_ITEMS_UPDATE_ACK(3588),
	INVENTORY_LEAVE_ACK(3590),
	ROOM_GET_PLAYERINFO_ACK(3842),
	ROOM_GET_NICKNAME_ACK(3844),
	ROOM_CHANGE_ROOMINFO_ACK(3848),
	ROOM_CHANGE_STATE_ACK(3848),
	ROOM_CLOSE_SLOT_ACK(3850),
	ROOM_CHATTING_ACK(3851),
	ROOM_GET_LOBBY_USER_LIST_ACK(3855),
	ROOM_CHANGE_OPTIONINFO_ACK(3859),
	ROOM_GET_SLOTS_ACK(3861),
	TESTE_ACK(3861),
	PROFILE_ENTER_ACK(3863),
	PROFILE_LEAVE_ACK(3865),
	ROOM_GET_HOST_ACK(3867),
	ROOM_GET_HOST2_ACK(3869),
	ROOM_CHANGE_HOST_ACK(3871),
	ROOM_NEW_HOST_ACK(3873),
	ROOM_CHANGE_SLOT_ACK(3877),
	ROOM_CHANGE_SLOTS_ACK(3877),
	ROOM_BALANCE_TEAM_ACK(3877),
	ROOM_UNREADY_4VS4_ACK(3879),
	ROOM_INVITE_RETURN_ACK(3885),
	BATTLE_INFO_LEVEL_AI_ACK(3890),
	ROOM_INSPECT_PLAYER_ACK(3893),
	ROOM_CHANGE_PASSWD_ACK(3907),
	ROOM_GET_SLOT_PLAYER_ACK(3909),
	BATTLE_AWARD_TIME_ACK(3911);
	public int id;
	GamePacketIdACK(int id)
	{
		this.id = id;
	}
	public static int getOpcode(String packet)
	{
		GamePacketIdACK p = valueOf(packet);
		if (p != null)
			return p.id;
		else
		{
			Logger.gI().info("error", null, "Opcode " + packet.toString() + " not founded opcode", GamePacketIdACK.class);
			return 0;
		}
	}
}